# Generated by Django 3.2 on 2021-12-21 08:59

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=255)),
                ('author_image', models.ImageField(blank=True, null=True, upload_to='authors')),
                ('author_designation', models.CharField(blank=True, max_length=255, null=True)),
                ('author_address', models.CharField(blank=True, max_length=255, null=True)),
                ('author_total_book', models.IntegerField(default=0)),
                ('author_introduction', models.TextField(blank=True, null=True)),
                ('author_email', models.CharField(blank=True, max_length=255, null=True)),
                ('author_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('author_facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('author_twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('author_linkedin', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_image', models.ImageField(upload_to='library')),
                ('book_title', models.CharField(max_length=255)),
                ('book_description', models.TextField(blank=True, null=True)),
                ('publishing_year', models.DateField()),
                ('book_language', models.CharField(max_length=255)),
                ('book_price', models.IntegerField(default=0)),
                ('book_offer', models.IntegerField(default=0)),
                ('book_stock', models.IntegerField(default=0)),
                ('book_isbn', models.CharField(blank=True, max_length=255, null=True)),
                ('book_publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('book_tag', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('book_featured', models.BooleanField(default=False)),
                ('book_popular', models.BooleanField(default=False)),
                ('book_inhouse', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BookCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='BookRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookWishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('is_popular', models.BooleanField(default=False)),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='category_image')),
                ('is_featured', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(max_length=255)),
                ('chapter_position', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_title', models.CharField(max_length=255)),
                ('course_image', models.ImageField(upload_to='course_image')),
                ('course_overview', models.TextField(blank=True, null=True)),
                ('course_year', models.DateField(auto_now_add=True)),
                ('course_language', models.CharField(max_length=255)),
                ('course_price', models.IntegerField(default=0)),
                ('course_offer', models.PositiveIntegerField(default=0)),
                ('course_include', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('course_outcome', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('course_description', models.TextField(blank=True, null=True)),
                ('course_target', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_inhouse', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_publish', models.BooleanField(default=False)),
                ('course_duration', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseWishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_position', models.PositiveIntegerField()),
                ('lesson_title', models.CharField(max_length=255)),
                ('lesson_type', models.CharField(choices=[('Q', 'Quiz'), ('V', 'Video'), ('I', 'Instruction'), ('A', 'Assignment')], max_length=2)),
                ('lesson_video', models.FileField(blank=True, null=True, upload_to='videos')),
                ('quiz_instruction', models.TextField(blank=True, null=True)),
                ('assignment_total_mark', models.IntegerField(default=0)),
                ('assignment_pass_mark', models.PositiveIntegerField(default=0)),
                ('quiz_time', models.IntegerField(default=0)),
                ('quiz_total_mark', models.IntegerField(default=0)),
                ('quiz_pass_mark', models.PositiveIntegerField(default=0)),
                ('quiz_negative', models.BooleanField(default=False)),
                ('quiz_negative_value', models.IntegerField(default=0)),
                ('text_instruction', models.TextField(blank=True, null=True)),
                ('assignment_instruction', models.TextField(blank=True, null=True)),
                ('assignment_file', models.FileField(blank=True, null=True, upload_to='assignment/instructor/')),
            ],
        ),
        migrations.CreateModel(
            name='MyBooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveSmallIntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Packed', 'Packed'), ('On The Way', 'On The Way'), ('Delivered', 'Delivered'), ('Cancel', 'Cancel')], default='Pending', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MyCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_position', models.PositiveIntegerField()),
                ('question', models.CharField(max_length=1000)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('correct_answer', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_file', models.FileField(blank=True, null=True, upload_to='assignment/student/')),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('mark', models.IntegerField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_mark', models.IntegerField(default=0)),
                ('is_completed', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.lesson')),
            ],
        ),
    ]
